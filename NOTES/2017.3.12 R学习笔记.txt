R语言简介
1.R语言有两个主要概念：对象和函数。R对象可以看做是具有关联名称的存储空间。R中的一切都存储在一个对象中。所有的变量、数据、函数等都是以命名对象的形式存储在计算机的内存中。
2.函数一种用来进行某个操作的特殊类型的R对象。
3.向量是R中最基本的数据对象。所有对象都有模式和长度属性。模式决定了存储在对象中的数据类型。向量用来存储一组基本类型相同的数据。一个向量的所有元素都必须属于相同的模式。
4.R的主要基本数据类型是字符型、逻辑性、数值型、复数型。
5.函数的向量化，这些函数可以直接对向量的每个元素进行操作。向量长度不同，R将使用循环规则，重复较短的向量元素，直到得到向量长度与较长响亮的长度相同。
6.因子提供了一个简单而又紧凑的形式来处理分类数据，用水平来表示所有可能的取值。如果数据集有取值个数固定的名义变量，因子就特别有用。
7.利用因子类型数据，可以做的事情之一就是计算每个可能致发生的次数：
    table()也可用于获取多个因子的交叉表。margin.table()计算列联表的边际；prop.table()计算列联表的相对频率。
8.生成序列，运算符：的优先级高于加减法。
    seq()生成实数序列；rep()生成某种模式重复序列；gl()生成带有因子的序列；
    R中有多个根据不同概率密度生成随机序列的函数。这些函数的通用结构是rfunc(n,par1,par2,...)，如：rnom(10)产生10个服从均值为0、标准差为1的整台分布的随机数值；rt()t分布等。
9.数据子集：
    x<- c(0,-3,4,-1,45,90,-5)
    x[c(4,6)]输出-1 90
    x[1:3]输出0 -3 4
    y<-c(1,4);x[y]输出0 -1
    x[-1]输出-3 4 -1 45 90 -5（使用负值的索引向量来表示哪些元素可以排除）
    x[-c(4,6)]输出0 -3 4 45 -5
    x[-(1:3)]输出-1 45 90 -5
    names()给向量中的元素命名。
10.矩阵和数组：
    矩阵：
    1).m<-c(45,23,66,77,33,44,56,12,78,23)
       dim(m) <-c(2,5);dim(m)给纬度m赋值
    2).m<-matric(c(45,23,66,77,33,44,56,12,78,23),2,5)
       按列填充矩阵
    3).m<-matric(c(45,23,66,77,33,44,56,12,78,23),2,5,byrow=T)
       按行填充矩阵
    4).m[2,3]输出12；m[-2,1]输出45（索引）；m[1,-c(3,5)]输出45 23 77;
       m[1, ]输出45 23 66 77 33；m[,4]输出77 78；
       m[1, ,drop =F]输出结果依然是矩阵；
    5).cbind()和rbind()分别按列和行把两个或两个以上的向量或矩阵合并在一起
    6).colnames()和rownames()分别给矩阵的行和列命名
    数组（数组是矩阵的扩展，把数据的纬度扩展到两个以上，这就意味着数组中的元素需要两个以上的索引）。
11.R列表是以其他对象为成分的有序集合，列表的成分和向量的元素不同，它们不一定是同一种数据类型、模式或者相同长度。列表的成分总是编号的并且有一个名称属性。
12.数据框是R软件中用于存储数据表的一种数据结构。结构域二维矩阵类似。然而，与矩阵不同的是，数据框的每列可以有不同数据类型的数据。在这个意义上，数据框和列表更想死。对R而言，数据框是一类特殊的列表。
    1).attach()可以直接访问数据框的列；detach()禁止访问数据框的列subset()对数据框进行简单的查询。
    2）.nrow()、nrow()获得数据框的行数或列数。



